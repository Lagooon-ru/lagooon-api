# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type MediaEntity {
  id: String!
  isActive: Boolean!
  isArchived: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
  author: UserEntity!
  name: String!
  path: String!
  type: String!
  size: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type ChatEntity {
  id: String!
  isActive: Boolean!
  isArchived: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
  type: String!
  title: String!
  description: String!
  members: [UserEntity!]!
  content: [MessageEntity!]!
}

type MessageEntity {
  id: String!
  isActive: Boolean!
  isArchived: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
  sender: UserEntity!
  message: String!
}

type UserEntity {
  id: String!
  isActive: Boolean!
  isArchived: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  email: String!
  emailConfirmed: Boolean!
  phone: String!
  phoneConfirmed: Boolean!
  isVerified: Boolean!
  avatar: MediaEntity!
  medias: [MediaEntity!]
  chats: [ChatEntity!]
}

type PaginationDto {
  total: Float!
  limit: Float!
  page: Float!
}

type UsersDto {
  data: [UserEntity!]!
  pagination: PaginationDto!
}

type TLogin {
  user: UserEntity!
  access_token: String!
}

type TForget {
  status: String!
}

type MediasDto {
  data: [MediaEntity!]!
  pagination: PaginationDto!
}

type PostEntity {
  id: String!
  isActive: Boolean!
  isArchived: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
  author: String!
  title: String!
  description: String!
  type: String!
  photos: [MediaEntity!]!
  size: String!
}

type PostsDto {
  data: [PostEntity!]!
  pagination: PaginationDto!
}

type StoryEntity {
  id: String!
  isActive: Boolean!
  isArchived: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
  author: String!
  title: String!
  description: String!
  type: String!
  tags: [String!]!
  photos: [MediaEntity!]!
  size: String!
}

type StoriesDto {
  data: [StoryEntity!]!
  pagination: PaginationDto!
}

type Query {
  users(search: UsersSearchDto!): UsersDto!
  user(id: String!): UserEntity!
  profile: UserEntity!
  medias: MediasDto!
  posts: PostsDto!
  stories: StoriesDto!
  story: StoryEntity!
  chats: [ChatEntity!]!
}

input UsersSearchDto {
  pagination: SearchPaginationDto!
  keyword: String
}

input SearchPaginationDto {
  limit: Float!
  page: Float!
}

type Mutation {
  signup(arg: RegisterDto!): TLogin!
  emailConfirm(email: String!): TForget!
  login(arg: LoginDto!): TLogin!
  forget(email: String!): TForget!
  resetPassword(arg: ResetPassDto!): UserEntity!
  upload: MediaEntity!
  createChat(arg: CreateChatDto!): ChatEntity!
}

input RegisterDto {
  name: String!
  email: String!
  password: String!
}

input LoginDto {
  email: String!
  password: String!
}

input ResetPassDto {
  token: String!
  password: String!
}

input CreateChatDto {
  type: String!
  members: [ID!]!
  title: String!
  description: String!
}